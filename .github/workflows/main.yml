name: Build, Test, Package and Push

# Controls when the action will run.
on:
  push:
    # Triggers the workflow on pull request events and merges/pushes to master
    branches:
      - master
      - release/*
    tags-ignore:
      - '**'
    
  pull_request:
    types: [opened, synchronize, reopened]

  schedule:
    # Daily 5am australian/brisbane time
    - cron: '0 19 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }}
  OCTOVERSION_Patch: ${{ github.run_number }}

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # all

    - name: Setup NET6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Test NET6
      run: ./build.sh -target Test

    - name: Linux unit test report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Linux unit test results
        path: ./TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: true

  build-release-windows:
    needs: test-linux
    runs-on: windows-latest
    env:
      OCTOPUS_API_KEY: ${{ secrets.DEPLOY_API_KEY }}
      OCTOPUS_HOST: ${{ secrets.DEPLOY_URL }}
      OCTOPUS_SPACE: "Core Platform"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # all

    - name: Setup NET6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
      
    # Adjustment is done prior to Nuke build as OCTOVERSION information is included in the result package.
    - name: Append OCTOVERSION_CurrentBranch with -nightly (for scheduled)
      if: github.event_name == 'schedule'
      run: echo "OCTOVERSION_CurrentBranch=${{ env.OCTOVERSION_CurrentBranch }}-nightly" >> $env:GITHUB_ENV

    - name: Nuke Build 🏗
      id: build
      run: ./build.ps1 --verbosity verbose

    - name: Windows unit test report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Windows unit test results
        path: ./TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: true

    - name: Tag release (when not pre-release) 🏷️
      if: ${{ github.event_name != 'schedule' && !contains( steps.build.outputs.octoversion_fullsemver, '-' ) }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.build.outputs.octoversion_fullsemver }}",
            sha: context.sha
          })

    - name: Push to Octopus 🐙
      uses: OctopusDeploy/push-package-action@v3
      with:
        packages: |
          ./artifacts/Octopus.Octodiff.${{ steps.build.outputs.octoversion_fullsemver }}.nupkg          

    - name: Create Release in Octopus 🐙
      uses: OctopusDeploy/create-release-action@v3
      with:
        project: Octodiff
        packages: |
          Octopus.Octodiff:${{ steps.build.outputs.octoversion_fullsemver }}         
